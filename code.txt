// ==UserScript==
// @name Privacy Redirector
// @name:tr Gizlilik Yönlendiricisi
// @name:de Datenschutz Umleiter
// @namespace https://github.com/dybdeskarphet/privacy-redirector
// @license GPLv3
// @version 1.3.0
// @description	Redirect social media platforms to their privacy respecting frontends
// @description:tr Sosyal medya platformlarını, gizliliğe saygı duyan önyüzlerine yönlendirir
// @description:de Leitet von Social-Media-Plattformen auf deren jeweilige datenschutzfreundlicheren Frontends
// @run-at document-start
// @match *://*.imdb.com/*
// @match *://*.imgur.com/*
// @match *://*.instagram.com/*
// @match *://*.medium.com/*
// @match *://*.quora.com/*
// @match *://*.reddit.com/*
// @match *://*.reuters.com/*
// @match *://*.tiktok.com/*
// @match *://*.twitter.com/*
// @match *://*.wikipedia.org/*
// @match *://*.youtube.com/*
// @match *://imgur.com/*
// @match *://instagram.com/*
// @match *://medium.com/*
// @match *://news.ycombinator.com/*
// @match *://reddit.com/*
// @match *://translate.google.com/*
// @match *://twitter.com/*
// @match *://youtube.com/*
// ==/UserScript==

/*
  ___  _   _        ___  _____ _____ 
 / _ \| \ | |      / _ \|  ___|  ___|
| | | |  \| |_____| | | | |_  | |_   
| |_| | |\  |_____| |_| |  _| |  _|  
 \___/|_| \_|      \___/|_|   |_|    

CHANGE THE RELEVANT VALUE TO "false" TO
DISABLE THE REDIRECTION FOR THAT
PARTICULAR SITE */
var redirect_gtranslate = false;
var redirect_hackernews = true;
var redirect_imdb = true;
var redirect_imgur = true;
var redirect_instagram = false;
var redirect_medium = true;
var redirect_quora = true;
var redirect_reddit = true;
var redirect_reuters = true;
var redirect_tiktok = true;
var redirect_twitter = false;
var redirect_wikipedia = true;
var redirect_youtube = false;

// // // // // // // // // // // // //

var farsideInstance = "farside.link";
var debug_mode = false;

if (debug_mode == true) {
  alert("Path: " + window.location.pathname + "\nQuery: " + window.location.search + "\nHash: " + window.location.hash)
}

function redirectInstagram() {
  if (redirect_instagram == false) {
    return;
  }

  window.stop();

  alert("Bibliogram Instances are broken, you may want to disable the redirection for Instagram")

  let bibliogramInstances = [
    'bibliogram.art',
    'bibliogram.pussthecat.org',
    'bibliogram.1d4.us',
    'bibliogram.froth.zone'
  ];

  let randomInstance = bibliogramInstances[Math.floor(Math.random()*bibliogramInstances.length)];

  if (window.location.pathname.startsWith("/accounts/login/")) {
    if (window.location.search.indexOf("/reel/") != -1) { // reels
      let newURL = window.location.protocol +
        "//" + randomInstance +
        window.location.pathname.replace("/accounts/login/", "/") +
        window.location.search.replace("?next=/reel", "p") +
        window.location.hash;

      window.location.replace(newURL);
    } else if (window.location.search.indexOf("/p/") == -1) { // user pages - it will break if it's not the second last block
      let newURL = window.location.protocol +
        "//" + randomInstance +
        window.location.pathname.replace("/accounts/login/", "/") +
        window.location.search.replace("?next=", "u") +
        window.location.hash;

      window.location.replace(newURL);
    } else { // probably a post
      let newURL = window.location.protocol +
        "//" +randomInstance +
        window.location.pathname.replace("/accounts/login/", "") +
        window.location.search.replace("?next=", "") +
        window.location.hash;

      window.location.replace(newURL);
    }
  } else {
    if (window.location.pathname == "/") { // home page
      location.hostname = randomInstance
    } else if (window.location.pathname.startsWith("/reel/")) { // reel
      let newURL = window.location.protocol +
        "//" + randomInstance +
        window.location.pathname.replace("/reel", "/p") +
        window.location.hash;

      window.location.replace(newURL);

    } else if (! window.location.pathname.startsWith("/p/")) { // user page - it will break if it's not the second last block
      let newURL = window.location.protocol +
        "//" + randomInstance +
        "/u" + window.location.pathname +
        window.location.search +
        indow.location.hash;

      window.location.replace(newURL);
    } else { // probably a post
      location.hostname = randomInstance 
    }
  }
}

function redirectTwitter() {
  if (redirect_twitter == false) {
    return;
  }

  window.stop();

  let newURL = window.location.protocol +
    "//" + farsideInstance + "/nitter" +
    window.location.pathname +
    window.location.search +
    window.location.hash;

  window.location.replace(newURL);
}

function redirectReddit() {
  if (redirect_reddit == false) {
    return;
  }

  window.stop();

  let farsideLibreddit = farsideInstance + "/libreddit";
  let farsideTeddit = farsideInstance + "/teddit";

  if (window.location.hostname == "old.reddit.com") {
    let newURL = window.location.protocol +
      "//" + farsideTeddit +
      window.location.pathname +
      window.location.search +
      window.location.hash;

    window.location.replace(newURL);
  } else {
    let newURL = window.location.protocol +
      "//" + farsideLibreddit +
      window.location.pathname +
      window.location.search +
      window.location.hash;

    window.location.replace(newURL);
  }
}

function redirectYoutube() {
  if (redirect_youtube == false) {
    return;
  }

  window.stop();

  let newURL = window.location.protocol +
    "//" + farsideInstance + "/invidious" +
    window.location.pathname +
    window.location.search +
    window.location.hash;

  window.location.replace(newURL);
}

function redirectTiktok() {
  if (redirect_tiktok == false) {
    return;
  }

  let proxitokInstances = [
    'proxitok.herokuapp.com',
    'proxitok.pussthecat.org',
    'tok.habedieeh.re',
    'proxitok.esmailelbob.xyz'
  ];

  let randomInstance = proxitokInstances[Math.floor(Math.random()*proxitokInstances.length)];

  window.stop();

  if (window.location.pathname.startsWith("/discover")) {
    let newURL = window.location.protocol +
      "//" + randomInstance +
      window.location.pathname.replace("discover", "tag") +
      window.location.hash;

    window.location.replace(newURL);
  } else if (window.location.pathname.search(/[a-z][a-z]\-[A-Z][A-Z]/g) != -1) {
    let newURL = window.location.protocol +
      "//" + randomInstance +
      window.location.pathname +
      window.location.search +
      window.location.hash;

    window.location.replace(newURL);
  } else {
    let newURL = window.location.protocol +
      "//" + randomInstance +
      window.location.pathname +
      window.location.search +
      window.location.hash;

    window.location.replace(newURL);
  }

}

function redirectImgur() {
  if (redirect_imgur == false) {
    return;
  }

  window.stop();

  let newURL = window.location.protocol +
    "//" + farsideInstance + "/rimgo" +
    window.location.pathname +
    window.location.search +
    window.location.hash;

  window.location.replace(newURL);
}

function redirectMedium() {
  if (redirect_medium == false || window.location.pathname == "/") {
    return;
  }

  window.stop();

  let newURL = window.location.protocol +
    "//" + farsideInstance + "/scribe" +
    window.location.pathname +
    window.location.search +
    window.location.hash;

  window.location.replace(newURL);
}

function redirectYoutubeMusic() {
  if (redirect_youtube == false) {
    return;
  }

  window.stop();

  if (window.location.pathname.startsWith("/playlist")) {
    let newURL = window.location.protocol +
      "//" + "beatbump.ml" +
      window.location.pathname +
      window.location.search.replace("?list=", "/VL") +
      window.location.hash;

    window.location.replace(newURL);
  } else if (window.location.pathname.startsWith("/channel")) {
    let newURL = window.location.protocol +
      "//" + "beatbump.ml" +
      window.location.pathname.replace("/channel", "/artist") +
      window.location.search +
      window.location.hash;

    window.location.replace(newURL);
  } else if (window.location.pathname.startsWith("/explore")) {
    let newURL = window.location.protocol +
      "//" + "beatbump.ml" +
      window.location.pathname.replace("/explore", "/trending") +
      window.location.search +
      window.location.hash;

    window.location.replace(newURL);
  } else if (window.location.pathname.startsWith("/moods_and_genres")) {
    let newURL = window.location.protocol +
      "//" + "beatbump.ml" +
      window.location.pathname.replace("/moods_and_genres", "/explore") +
      window.location.search +
      window.location.hash;

    window.location.replace(newURL);
  } else {
    location.hostname = "beatbump.ml";
  }

}

function redirectHackerNews() {
  if (redirect_hackernews == false) {
    return;
  }

  window.stop();
  let newURL = window.location.protocol + "//" + "hckrnws.com" +
                 window.location.pathname.replace("item","/stories") +
                 window.location.search.replace("?id=", "/") +
                 window.location.hash;
  window.location.replace(newURL);
}

function redirectGTranslate() {
  if (redirect_gtranslate == false) {
    return;
  }

  window.stop();


  if (window.location.search != "") {
    let newURL = window.location.protocol +
      "//" + farsideInstance + "/lingva" +
      window.location.pathname +
      window.location.search
      .replace(/\?hl=tr/, "")
      .replace(/.sl=/, "")
      .replace("&tl=", "/")
      .replace("&text=", "/")
      .replace("&op=translate", "") +
      window.location.hash;

    window.location.replace(newURL);
  } else {
    let newURL = window.location.protocol +
      "//" + farsideInstance + "/lingva";

    window.location.replace(newURL);
  }
}

function redirectReuters() {
  if (redirect_reuters == false) {
    return;
  }

  window.stop();
  location.hostname = "neuters.de";
}

function redirectWikipedia() {
  if (redirect_wikipedia == false) {
    return;
  }

  let langCodeIndex = window.location.hostname.search(/^[a-z][a-z]\./)

  window.stop();

  if (langCodeIndex != -1) {
    let newURL = window.location.protocol +
      "//" + farsideInstance + "/wikiless" +
      window.location.pathname +
      "?lang=" +
      window.location.hostname[langCodeIndex] + window.location.hostname[langCodeIndex + 1] +
      window.location.hash;
    window.location.replace(newURL);
  } else {
    let newURL = window.location.protocol +
      "//" + farsideInstance + "/wikiless" +
      window.location.pathname +"?lang=en" +
      window.location.hash;
    window.location.replace(newURL);
  }
}

function redirectImdb() {
  if (redirect_imdb == false) {
    return;
  }

  if (window.location.pathname.startsWith("/title/")) {
    window.stop();
    let newURL =
      window.location.protocol +
      "//" + farsideInstance + "/libremdb" +
      window.location.pathname +
      window.location.search +
      window.location.hash;
    window.location.replace(newURL);
  }
}

function redirectQuora() {
  if (redirect_quora == false) {
    return;
  }

  window.stop();

  let newURL =
    window.location.protocol +
    "//" + farsideInstance + "/querte" +
    window.location.pathname +
    window.location.search +
    window.location.hash;

  window.location.replace(newURL);
}


let urlHostname = window.location.hostname;

switch (urlHostname) {

  case "www.instagram.com":
    redirectInstagram();
    break;

  case "twitter.com":
  case "mobile.twitter.com":
    redirectTwitter();
    break;

  case "www.reddit.com":
  case "old.reddit.com":
    redirectReddit();
    break;

  case "www.youtube.com":
  case "m.youtube.com":
    redirectYoutube();
    break;

  case "www.tiktok.com":
    redirectTiktok();
    break;

  case "music.youtube.com":
    redirectYoutubeMusic();
    break;

  case "news.ycombinator.com":
    redirectHackerNews();
    break;

  case "translate.google.com":
    redirectGTranslate();
    break;

  case "www.reuters.com":
    redirectReuters();
    break;

  case "www.imdb.com":
    redirectImdb();
    break;

  case "www.quora.com":
    redirectQuora();
    break;
}

if (urlHostname.includes("medium.com")) {
  redirectMedium();
} else if (urlHostname.includes("imgur.com")) {
  redirectImgur();
} else if (urlHostname.includes("wikipedia.org")) {
  redirectWikipedia();
}

==========| Next |==========

// ==UserScript==
// @name         kbin Feed Curator
// @version      0.1
// @namespace    https://greasyfork.org/users/19234
// @description  Hides posts with blacklisted keywords from the main feed.
// @author       fiofiofio
// @match        https://kbin.social/*
// @match        https://fedia.io/*
// @match        https://karab.in/*
// @match        https://www.kbin.cafe/*
// @match        https://karab.in/*
// @match        https://readit.buzz/*
// @match        https://forum.fail/*
// @match        https://fedi196.gay/*
// @match        https://feddit.online/*
// @match        https://kbin.run/*
// @match        https://nadajnik.org/*
// @match        https://kbin.cafe/*
// @match        https://kbin.lol/*
// @match        https://nerdbin.social/*
// @match        https://kbin.lgbt/*
// @match        https://kbin.place/*
// @match        https://kopnij.in/*
// @match        https://kbin.sh/*
// @match        https://kayb.ee/*
// @match        https://wiku.hu/*
// @match        https://kbin.chat/*
// @match        https://fediverse.boo/*
// @match        https://tuna.cat/*
// @match        https://kbin.dk/*
// @match        https://sacredori.net/*
// @grant        GM_log
// @require      https://github.com/Oricul/kbin-scripts/raw/main/kbin-mod-options.js
// @license      MIT
// ==/UserScript==

(function () {
  var blacklist = JSON.parse(localStorage.getItem('blacklist')) || [];

  const style = document.createElement('style');
  style.textContent = `
    .hide-post {padding:.5rem 2rem;}
    .hidden-note {margin-top:1rem; font-style:italic}
  `;
  document.head.appendChild(style);

  // Settings
  const feedCuratorHeader = kmoAddHeader(
    'kbin Feed Curator', {
      author: 'fiofiofio',
      version: '0.1',
      license: 'MIT',
      url: 'https://greasyfork.org/users/19234'
    }
  );

  const placeholderToggle = kmoAddToggle(
    feedCuratorHeader,
    'Show post placeholder?',
    true,
    'Show or hide the placeholder for blocked posts.'
  );

  const blacklistButton = kmoAddButton(
    feedCuratorHeader,
    'Blacklist',
    'Edit',
    'Open blacklist editor.'
  );

  // Save toggle state when clicked
  placeholderToggle.addEventListener('click', () => {
    localStorage.setItem('placeholderToggle', placeholderToggle.checked);
  });

  var toggleValue = localStorage.getItem('placeholderToggle');
  if (toggleValue !== null) {
    placeholderToggle.checked = JSON.parse(toggleValue);
  }

  // Open the blacklist editor when the button is clicked
  blacklistButton.addEventListener('click', function () {
    createBlacklistDialog();
    document.getElementById("blacklistDialog").showModal();
  });

  function createBlacklistDialog() {
    const modalDiv = document.createElement('dialog');
    modalDiv.id = "blacklistDialog";

    // Generate a list of current blacklist words
    const blacklistItems = blacklist.map(word => `<li>${word} <button class="remove-button" data-word="${word}">Remove</button></li>`).join('');

    modalDiv.innerHTML = `
    <form id="blacklistForm">
      <p>Current blacklist:</p>
      <ul id="blacklistItems">${blacklistItems}</ul>
      <label for="blacklistInput">Enter words to add to the blacklist (comma-separated):</label>
      <input type="text" id="blacklistInput" required>
      <div class="buttons">
        <button type="submit">Update Blacklist</button>
        <button type="button" id="cancelButton">Cancel</button>
      </div>
    </form>`;
    document.body.appendChild(modalDiv);

    const form = modalDiv.querySelector('#blacklistForm');
    const input = modalDiv.querySelector('#blacklistInput');
    const buttons = modalDiv.querySelector('.buttons');
    const cancelButton = modalDiv.querySelector('#cancelButton');
    const removeButtons = modalDiv.querySelectorAll('.remove-button');

    // Add CSS styles to the dialog element
    modalDiv.style.backgroundColor = 'var(--kbin-primary-color)';
    modalDiv.style.color = 'var(--kbin-text-color)';
    modalDiv.style.fontFamily = 'var(--kbin-body-font-family)';
    modalDiv.style.border = 'var(--kbin-section-border)';

    if(removeButtons.length > 0) {
      removeButtons.querySelectorAll("button").forEach(button => {
        button.style.backgroundColor = 'var(--kbin-vote-bg)';
        button.style.color = 'var(--kbin-vote-text-color)';
        button.style.marginLeft = 'var(--kbin-entry-element-spacing)';
        button.style.padding = '2px';
        button.style.border = 'var(--kbin-section-border)';
      });
    }

    buttons.querySelectorAll("button").forEach(button => {
      button.style.backgroundColor = 'var(--kbin-vote-bg)';
      button.style.color = 'var(--kbin-vote-text-color)';
      button.style.margin = 'var(--kbin-entry-element-spacing)';
      button.style.marginLeft = '0';
      button.style.padding = '10px';
      button.style.border = 'var(--kbin-section-border)'
    });

    form.addEventListener('submit', function (event) {
      event.preventDefault();
      var userInput = input.value;
      var userWords = userInput.split(',').map(word => word.trim());

      blacklist = blacklist.concat(userWords);
      localStorage.setItem('blacklist', JSON.stringify(blacklist));

      modalDiv.close();
      location.reload();
    });

    cancelButton.addEventListener('click', function () {
      modalDiv.close();
    });

    if (removeButtons.length > 0) {
        removeButtons.forEach(button => {
            button.addEventListener('click', function () {
                const wordToRemove = button.dataset.word;
                blacklist = blacklist.filter(word => word !== wordToRemove);
                localStorage.setItem('blacklist', JSON.stringify(blacklist));
                modalDiv.remove();
                createBlacklistDialog();
                document.getElementById("blacklistDialog").showModal();
            });
        });
    }
  }

  function hidePosts() {
    document.querySelectorAll("article").forEach(article => {
      const header = article.getElementsByTagName("header")[0]?.textContent;
      const description = article.getElementsByClassName("short-desc")[0]?.textContent;
      const magazineName = article.querySelector('.magazine-inline')?.getAttribute('title')?.toLowerCase();

      if (checkText(header) || checkText(description) || checkMagazineName(magazineName)) {
        if (placeholderToggle.checked) {
          let keywords = checkText(header)?.join(", ") || checkText(description)?.join(", ") || magazineName;
          const noteClassName = "hidden-note";
          article.classList.add("hide-post");
          article.classList.remove("entry");
          article.innerHTML = `<p class="${noteClassName}">Post hidden containing keywords: ${keywords}</p>`;
        }
        else {
          article.style.display = "none";
        }
      }
    });
  }

  function checkText(string) {
    const matchedWords = blacklist.filter(word => string?.toLowerCase().includes(word.toLowerCase()));
    return matchedWords.length > 0 ? matchedWords : null;
  }

  // Checks magazine name for blacklisted words
  function checkMagazineName(string) {
    return blacklist.some(word => {
      const wordRegex = new RegExp(`\\b${word}\\b`, 'i');
      return wordRegex.test(string);
    });
  }

  // Wait for the document to load
  window.addEventListener('load', function () {
    hidePosts();
  });
})();

==========| Next |==========

// ==UserScript==
// @name        Spaz's Reddit Delete
// @namespace   Reddit
// @include     http*://*.reddit.com/user/*
// @version     1
// @description Replaces all VISIBLE comments with garbage text, then deletes the comment. Works with RES!
// ==/UserScript==

RD = unsafeWindow.RedditDelete = {};
RD.DELAY_SAVE   = 2 * 1000;
RD.DELAY_DELETE = 3 * 1000;
RD.chars      = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz><.-,+!@#$%^&*();:[]~';
RD.started    = false;

function __getRNGString(maxLength) {
  var rnum, repl_str = '';

  for (var x = 0; x < maxLength; x++){
    rnum = Math.floor(Math.random() * RD.chars.length);
    repl_str += RD.chars.charAt(rnum, 1);
  }

  return repl_str;
}

function _setupEnv() {
  if (RD.started) return;

  RD.numDel       = 0;
  RD.contentCtnr  = document.querySelector('div.content');
  RD.infoBar      = document.createElement('span');
  RD.userName     = document.querySelector('span.user > a:not(.login-required)').innerHTML;
  RD.infoBar.setAttribute('class', 'nextprev');
  RD.started      = true;
}

function _setupUI() {
  //Build DELETE-ALL Link
  var delAllLink        = document.createElement('a');
  delAllLink.innerHTML  = 'SECURE DELETE ALL COMMENTS';
  delAllLink.onclick    = _promptDeleteAll;
  delAllLink.style.cssText = "color: rgb(200, 0, 0); text-shadow: -1px 0px 6px rgba(0,0,0, 0.7);";

  //Add to infoBar!
  RD.infoBar.appendChild(delAllLink);
  RD.contentCtnr.insertBefore(RD.infoBar, RD.contentCtnr.firstChild);
}

function _promptDeleteAll() {
  var doDelete = confirm("Are you sure you want to delete all comments on the screen?\n\n"
    + "ProTip: If you want to delete ALL, use RES and use 'Never Ending Reddit' feature to show ALL comments.");

  if (!doDelete) return;

  _deleteAll();
}

function _deleteAll() {
  var modalCntr = RD.modalCntr = document.createElement('div');
  var modalMsg  = RD.modalMsg  = document.createElement('div');
  var cancelBtn  = document.createElement('button');
  modalCntr.style.cssText = ''
   + 'position: fixed; top: 0; left: 0; right: 0; bottom: 0;'
   + 'height: 100%; width: 100%; background: rgba(0,0,0,0.8);'

  modalMsg.style.cssText = ''
   + 'position: absolute; font-size: 32px; transform: translateX(-50%); top: 50%; left: 50%;'

  cancelBtn.style.cssText = ''
   + 'position: absolute; font-size: 22px;'
   + 'transform: translateX(-50%); top: 63%; left: 50%;'

  cancelBtn.innerHTML = "Cancel";
  cancelBtn.onclick = function() {
    RD.modalMsg.innerHTML = "Cancelling..."
    RD.numDel = RD.comments.length;
  }

  RD.comments = __getVisibleComments();
  RD.numDel     = 0;

  modalCntr.appendChild(modalMsg);
  modalCntr.appendChild(cancelBtn);
  document.body.appendChild(modalCntr);

  __deleteCommentIndex(0);
}

function __getVisibleComments() {
  var foundComments = [];

  var entries     = RD.contentCtnr.querySelectorAll('.entry.likes');
  var entry       = null;
  var entryAuthor = '';

  for (var idx = 0; idx < entries.length; idx++) {
    entry = entries[idx];
    entryAuthor = entry.querySelector('.author');

    if (!entryAuthor || entryAuthor.innerHTML !== RD.userName) continue;

    foundComments.push(entry);
  };

  return foundComments;
}

function __deleteCommentIndex(idx) {
  var comment = RD.comments[idx];

  __overwriteComment(comment, function(comment) {
    __deleteComment(comment, function() {
      var complete = RD.numDel >= RD.comments.length;
      if (false === complete) {
        RD.numDel++;
        __deleteCommentIndex(RD.numDel);
      } else {
        window.location.reload();
      }
    });
  });
}

function __overwriteComment(comment, callback) {
  var editLink = comment.querySelector('.edit-usertext');
  var editText, newText, saveLink;

  RD.modalMsg.innerHTML = 'Overwriting ' + (RD.numDel + 1) + ' of ' + RD.comments.length + '...';

  if (!editLink) { if (callback) callback(comment); return; }

  //Enable editing...
  editLink.click();
  editText = comment.querySelector('textarea');
  saveBtn = comment.querySelector('.usertext-buttons .save');

  //Replace Text with RNG string
  newText         = __getRNGString(editText.value.length);
  editText.value  = newText;

  //Do the save...
  saveBtn.click();
  setTimeout(function() { if (callback) callback(comment); }, RD.DELAY_SAVE);
}

function __deleteComment(comment, callback) {
  RD.modalMsg.innerHTML = 'Deleting ' + (RD.numDel + 1) + ' of ' + RD.comments.length + '...';

  var deleteLink = comment.querySelector('form.del-button .togglebutton')
  var yesLink;

  //Enable deleting...
  deleteLink.click();
  yesLink = comment.querySelector('.option.error.active a.yes');

  if (!yesLink) { if (callback) callback(); return; }

  //Delay clicking YES so the user can see it
  setTimeout(function() {
    //Do the delete...
    yesLink.click();
    setTimeout(function() { if (callback) callback(); }, RD.DELAY_DELETE);
  }, 250);
}

(function() {
  _setupEnv();
  _setupUI();
})();

=========| Next |==========

<?php 
/*=========================================================================*\ 
|| ####################################################################### || 
|| # vBulletin Core Configuration                                        # || 
|| # vBulletin 5.2.4 Patch Level 1 
|| # ------------------------------------------------------------------- # || 
|| # All PHP code in this file is copyright 2000-2016 vBulletin Solutions Inc. 
|| # This file may not be redistributed in whole or significant part.    # || 
|| # ----------------- VBULLETIN IS NOT FREE SOFTWARE ------------------ # || 
|| # http://www.vbulletin.com | http://www.vbulletin.com/license.html    # || 
|| ####################################################################### || 
\*=========================================================================*/ 


/*----------------------------------------------------------------------*\ 
|        ****** NOTE REGARDING THE VARIABLES IN THIS FILE ******         | 
+------------------------------------------------------------------------+ 
| If you get any errors while attempting to connect to MySQL, you will   | 
| need to email your webhost because we cannot tell you the correct      | 
| values for the variables in this file.                                 | 
|                                                                        | 
| When making changes to the file, the edit should always be to the      | 
| right of the = sign between the single quotes                          | 
| Default: $config['MasterServer']['username'] = 'root';                 | 
| Example: $config['MasterServer']['username'] = 'myuser';  GOOD!        | 
| Example: $config['MasterServer']['myuser'] = 'root';      BAD!         | 
\*----------------------------------------------------------------------*/ 

if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) 
{ 
  $_SERVER['REMOTE_ADDR'] = $_SERVER['HTTP_X_FORWARDED_FOR']; 
} 

    //    ****** DATABASE TYPE ****** 
    //    This is the type of the database server on which your vBulletin database 
    //    will be located. Valid options are mysql and mysqli, for slave support add 
    //     _slave to the end of the database class. 
    // WARNING: mysqli will now be used in place of the obsolete mysql library  
$config['Database']['dbtype'] = 'mysqli';

=========| Next |==========

mysql> SHOW TABLES; 
+-----------------+ 
| Tables_in_test  | 
+-----------------+ 
| coaches         | 
| managers        | 
| players         | 
| results         | 
| team_plays_team | 
| teams           | 
+-----------------+ 
6 rows in set (0.00 sec) 

mysql> SHOW COLUMNS FROM teams; 
+---------+--------------+------+-----+---------+----------------+ 
| Field   | Type         | Null | Key | Default | Extra          | 
+---------+--------------+------+-----+---------+----------------+ 
| team_id | int(11)      | NO   | PRI | NULL    | auto_increment | 
| name    | varchar(100) | NO   |     | NULL    |                | 
| deleted | bit(1)       | NO   |     | b'0'    |                | 
+---------+--------------+------+-----+---------+----------------+ 
3 rows in set (0.02 sec) 

mysql> SHOW COLUMNS FROM team_plays_team; 
+--------------+----------+------+-----+---------+-------+ 
| Field        | Type     | Null | Key | Default | Extra | 
+--------------+----------+------+-----+---------+-------+ 
| date         | datetime | NO   | PRI | NULL    |       | 
| home_team_id | int(11)  | NO   | PRI | NULL    |       | 
| away_team_id | int(11)  | NO   | PRI | NULL    |       | 
+--------------+----------+------+-----+---------+-------+ 
3 rows in set (0.01 sec) 

mysql> SHOW COLUMNS FROM results; 
+--------------+----------+------+-----+---------+-------+ 
| Field        | Type     | Null | Key | Default | Extra | 
+--------------+----------+------+-----+---------+-------+ 
| date         | datetime | NO   | PRI | NULL    |       | 
| home_team_id | int(11)  | NO   | PRI | NULL    |       | 
| away_team_id | int(11)  | NO   | PRI | NULL    |       | 
| home_score   | int(11)  | NO   |     | NULL    |       | 
| away_score   | int(11)  | NO   |     | NULL    |       | 
+--------------+----------+------+-----+---------+-------+ 
5 rows in set (0.02 sec) 

mysql> SHOW COLUMNS FROM players; 
+---------------+---------+------+-----+---------+-------+ 
| Field         | Type    | Null | Key | Default | Extra | 
+---------------+---------+------+-----+---------+-------+ 
| player_id     | int(11) | NO   | PRI | NULL    |       | 
| team_id       | int(11) | NO   | MUL | NULL    |       | 
| name          | int(11) | NO   |     | NULL    |       | 
| jersey_number | int(11) | NO   |     | NULL    |       | 
| position      | int(11) | NO   |     | NULL    |       | 
| suspended     | bit(1)  | NO   |     | NULL    |       | 
| injured       | bit(1)  | NO   |     | NULL    |       | 
| deleted       | bit(1)  | NO   |     | NULL    |       | 
+---------------+---------+------+-----+---------+-------+ 
8 rows in set (0.02 sec) 

mysql> SHOW COLUMNS FROM coaches; 
+----------+---------+------+-----+---------+-------+ 
| Field    | Type    | Null | Key | Default | Extra | 
+----------+---------+------+-----+---------+-------+ 
| coach_id | int(11) | NO   | PRI | NULL    |       | 
| team_id  | int(11) | NO   | MUL | NULL    |       | 
| name     | int(11) | NO   |     | NULL    |       | 
| deleted  | bit(1)  | NO   |     | NULL    |       | 
+----------+---------+------+-----+---------+-------+ 
4 rows in set (0.01 sec) 

mysql> SHOW COLUMNS FROM managers; 
+------------+---------+------+-----+---------+-------+ 
| Field      | Type    | Null | Key | Default | Extra | 
+------------+---------+------+-----+---------+-------+ 
| manager_id | int(11) | NO   | PRI | NULL    |       | 
| team_id    | int(11) | NO   | MUL | NULL    |       | 
| name       | int(11) | NO   |     | NULL    |       | 
| deleted    | bit(1)  | NO   |     | NULL    |       | 
+------------+---------+------+-----+---------+-------+ 
4 rows in set (0.01 sec)|

=========| Next |==========

░░░░░░        ░░        ░░░░░░    ░░                                  ░░░░░░░░░░░░░░░░░░░░░░░░░░  ░░░░░░░░░░░░                  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░      ░░░░        ░░░░                                    ░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░        ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
  ░░░░    ░░░░                  ░░                        ░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░                                                ░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░  ░░                ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░                                        ░░░░░░▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░                                    ░░░░░░▒▒▒▒░░░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                      ░░░░                  ░░░░░░▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                      ░░░░                ░░░░░░░░░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                                        ░░░░░░░░░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                                      ░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░      ░░░░░░░░░░░░░░░░░░░░░░░░░░
                    ░░░░            ░░░░░░░░░░▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░        ░░░░░░░░░░░░░░░░░░░░
              ░░        ░░        ░░░░░░░░░░▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░    ░░░░░░░░░░░░░░░░░░
                      ░░░░░░    ░░░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░    ░░░░░░░░░░░░░░
                          ░░    ░░░░░░░░░░▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                              ░░░░░░░░░░░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒░░░░░░▒▒░░░░░░░░░░░░          ░░░░░░░░░░░░░░░░░░░░░░
                              ░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▓▓▓▓▓▓████████████████████████▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░  ░░░░░░░░░░░░░░░░░░░░░░
                            ░░  ░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▓▓▓▓▓▓██████████████████████████▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                                ░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒▓▓▓▓▓▓▓▓████████████████▓▓▓▓▓▓████████▓▓▓▓▓▓▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                                ░░░░░░░░▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒▓▓▓▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                              ░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓██████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                          ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                          ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                          ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓██▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                          ░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒░░▓▓██████▓▓▒▒▓▓▓▓▓▓██████████████████▓▓▓▓▓▓▓▓▓▓▒▒░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▒▒░░░░░░░░░░░░░░▒▒▒▒▓▓████████▓▓▒▒▒▒▓▓▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░▒▒░░░░░░░░░░▒▒▓▓██████████████▒▒▒▒▓▓██████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                  ░░░░░░░░  ░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░▒▒▓▓▓▓████████████▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓████████▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓██▓▓▒▒▒▒▓▓▓▓▓▓░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒░░░░▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████▓▓▒▒▒▒▒▒▓▓▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒░░░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓██████████▒▒▒▒▒▒▓▓░░▒▒▒▒░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                    ░░░░▒▒  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓████████▓▓▒▒▒▒▓▓░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                    ░░▒▒▒▒  ░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓██████▓▓░░░░▓▓▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                    ░░▒▒▒▒    ░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓████████████▓▓▒▒▒▒▒▒▒▒▒▒████▓▓░░░░░░▒▒░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
            ░░░░    ░░▒▒▒▒        ░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒░░▒▒▓▓▓▓▓▓▓▓████▓▓██████▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░▒▒░░▒▒░░▒▒▒▒░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░
          ░░        ░░░░▒▒░░      ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓████▓▓██▓▓██▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░▒▒░░▒▒░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░          ░░░░▒▒          ░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░▒▒▒▒▒▒████████████▓▓██▓▓██▓▓▓▓▒▒░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░        ░░░░▒▒          ░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░▒▒░░░░▓▓▓▓▓▓████████████▓▓████████▓▓▒▒▒▒▒▒▓▓▒▒▒▒░░░░▒▒░░▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░        ░░░░▒▒            ░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒▓▓▓▓▓▓██████████████████▓▓▓▓▒▒▒▒▒▒▓▓▒▒▒▒░░░░▒▒░░▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░
░░░░░░░░              ░░░░░░          ░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓████████████████▓▓▓▓▓▓▒▒▒▒▓▓▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░
                        ░░░░░░          ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓██▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░  ░░░░░░░░
                          ░░░░            ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░  ░░▒▒▒▒▒▒██████▒▒▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░    ░░    
                          ░░░░░░          ░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░░░░░░░░▒▒▓▓██████▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░  
                        ░░░░░░░░        ░░  ░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░    ░░░░░░░░
                                        ░░░░  ░░  ░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓▓▓▓▓▒▒▒▒░░░░▒▒░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░
                                    ░░    ░░        ░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░
                  ░░░░                      ░░        ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒░░▒▒░░░░░░░░░░▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░
                                    ░░    ░░            ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░
                        ░░              ░░░░                ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░
░░░░                    ░░            ░░░░▒▒▒▒░░░░          ░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░    ░░░░░░░░
░░░░░░░░░░                            ░░▒▒▒▒▓▓▒▒░░░░          ░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░  ░░░░░░
░░░░░░░░░░░░░░                        ░░░░▒▒▓▓▒▒▒▒▒▒░░        ░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒    
░░░░░░░░░░░░░░                        ░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░  ░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░    
░░░░░░░░░░░░░░                ░░        ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░  ░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒░░▒▒░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░            ░░░░░░░░░░      ░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
░░░░            ░░░░░░░░░░░░░░░░░░░░  ░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░
                ░░░░░░░░░░░░░░░░░░░░  ░░░░    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░  ░░░░░░░░░░░░

=========| Next |==========

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

==========| Next |==========

import 'jquery';
import React, { useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import clippyjs from 'clippyjs';
import clippyStyle from './style';
import AGENTS from './agents';
import ClippyContext from './ClippyContext';

let clippyAgent;

const ClippyProvider = ({ children, agentName = AGENTS.CLIPPY }) => {
  const [clippy, setClippy] = useState();

  function byebye(agent, cb) {
    agent.hide(false, () => {
      if (cb) cb();
    });
  }

  useEffect(() => {
    const { head } = document;
    const link = document.createElement('style');

    link.type = 'text/css';

    if (link.styleSheet) {
      link.styleSheet.cssText = clippyStyle;
    } else {
      link.appendChild(document.createTextNode(clippyStyle));
    }

    head.appendChild(link);

    return () => byebye(clippyAgent);
  }, []);

  useEffect(() => {
    function getAgent() {
      clippyjs.load(
        agentName,
        agent => {
          agent.show();
          setClippy(agent);
          clippyAgent = agent;
        },
        () => {
          setClippy();
        },
        window?.CLIPPY_CDN || 'https://cdn.jsdelivr.net/gh/pi0/clippyjs@master/assets/agents/',
      );
    }

    if (clippy) {
      byebye(clippy, () => getAgent());
    } else {
      getAgent();
    }
  }, [agentName]);

  return (
    <ClippyContext.Provider
      value={{
        clippy,
      }}
    >
      {children}
    </ClippyContext.Provider>
  );
};

ClippyProvider.propTypes = {
  agentName: PropTypes.string,
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node,
  ]),
};

ClippyProvider.defaultProps = {
  agentName: AGENTS.CLIPPY,
  children: undefined,
};

export default ClippyProvider;

==========| Next |==========

import { cheese } from cheese.js;
import { server } from server_connect.js;
import { encryption } from encrypting_secure.js;

function login() {
  let pass = prompt ("Password: ");
  let q1 = prompt ("Guess what type of encoding this is: d2Ugd2lsbCBmaW5kIHlvdQ==")
  let q2 = prompt ("I have no wings but I can fly, I am not that fast but can catch up with a cheetah, I have no gills yet can breath underwater, what am I?");
  let q3 = prompt ("This is the last security question. What is the rarest element on the periodic table?");

  if (pass == "ZG9n") {
    alert ("Password Correct.");
    console.info ("Password Correct.");
    var p = true;
  } else {
    alert ("Password Incorrect, leave now.");
    console.warn ("Password Incorrect. Unauthorized Person on the Terminal System Computer.");
  }

  if (q1 == "base64" || q1 == "Base64" || q1 == "BASE64") {
    alert ("Question One Correct.");
    console.info ("Question One Correct.");
    var one = true;
  } else {
    alert ("Question One Incorrect, leave now.");
    console.warn ("Question One Incorrect. Unauthorized Person on the Terminal System Computer.");

    if (q2 == "a person" || q2 == "A PERSON" || q2 == "A Person" || q2 == "A person" || q2 == "a Person" || q2 == "a human" || q2 == "A human" || q2 == "a Human" || q2 == "A HUMAN" ||q2 == "human" || q2 == "Human" || q2 == "HUMAN" || q2 == "person" || q2 == "Person" || q2 == "PERSON") {
    alert ("Question Two Correct.");
    console.info ("Question Two Correct.");
    var two = true;
    } else {
      alert ("Question Two Incorrect, leave now.");
      console.warn ("Question Two Incorrect. Unauthorized Person on the Terminal System Computer");
    }

    if (q3 == "astatine" || q3 == "ASTATINE" || q3 == "Astatine" || q3 == "85") {
      alert ("Question Three Correct.");
      console.info ("Question Three Correct.");
      var three = true;
    } else {
      alert ("Question Three Incorrect.");
      console.warn ("Question Three Incorrect. Unauthorized Person on the Terminal System Computer.");
    }

    if (one == true && two == true && three == true && p == true) {
      alert ("You are now signed into the Terminal System Computer.");
      console.info ("User Signed In.");
    } else {
      alert ("Leave Now, you are an Unauthorized Person, and are not allowed to be using the Terminal System Computer, this computer is property of the FBI & CIA. Leave the building now.");
      console.warn ("Unnathorized Person on the Terminal System Computer!");
    }
  }
}

==========| Next |==========
